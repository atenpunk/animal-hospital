/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StatusPanel.java
 *
 * Created on 11 พ.ค. 2552, 14:44:39
 */
package co.th.aten.hospital.ui;

import co.th.aten.hospital.Constants;
import java.awt.Color;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.SwingWorker;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.richclient.application.Application;
import org.springframework.richclient.image.ImageSource;

/**
 *
 * @author Mai
 */
public class StatusPanel extends javax.swing.JPanel {

    private final Log logger = LogFactory.getLog(getClass());
    private int netStatus;
    private int cardReaderStatus;

//    private boolean blink;
    private SwingWorker blinkWorker;
//    private String currentMsg;
//    private Timer timer;

    /** Creates new form StatusPanel */
    public StatusPanel() {
        initComponents();
        netStatus = Constants.NET_STATUS_FAIL;

        btNet.setEnabled(true);
//        blink = false;

    }

    public void changeNetStatus(int status) {
        if (netStatus != status) {
            if (status == Constants.NET_STATUS_OK) {
                ImageSource is = (ImageSource) Application.services().getService(ImageSource.class);
                btNet.setIcon(new ImageIcon(is.getImage("status.netOk")));
                btNet.repaint();
            } else {
                ImageSource is = (ImageSource) Application.services().getService(ImageSource.class);
                btNet.setIcon(new ImageIcon(is.getImage("status.netFail")));
                btNet.repaint();
            }
            this.netStatus = status;
        }
    }


    public void changeCardReaderStatus(int status) {
//        if (cardReaderStatus != status) {
//            if (status == CardReaderDriver.STATUS_FAIL) {
//                ImageSource is = (ImageSource) Application.services().getService(ImageSource.class);
//                btReader.setIcon(new ImageIcon(is.getImage("status.cardReaderFail")));
//                btReader.repaint();
//            } else {
//                ImageSource is = (ImageSource) Application.services().getService(ImageSource.class);
//                btReader.setIcon(new ImageIcon(is.getImage("status.cardReaderOk")));
//                btReader.repaint();
//            }
//            this.cardReaderStatus = status;
//        }
    }


    public void changeMessage(int type, String msg) {
        logger.info("change message ="+msg);
        if (blinkWorker != null) {
            blinkWorker.cancel(true);
            blinkWorker = null;
        }
        if (type == Constants.MSG_NORMAL) {
            jLabel1.setForeground(new Color(0, 0, 255));
            jLabel1.setText(msg);
        } else if (type == Constants.MSG_ERROR) {
            jLabel1.setForeground(new Color(255, 0, 0));
            jLabel1.setText(msg);
        } else if (type == Constants.MSG_NORMAL_BLINK) {
            jLabel1.setForeground(new Color(0, 0, 255));
            jLabel1.setText(msg);
            blinkWorker = blinkMessage();
            blinkWorker.execute();
        } else if (type == Constants.MSG_ERROR_BLINK) {
            jLabel1.setForeground(new Color(255, 0, 0));
            jLabel1.setText(msg);
            blinkWorker = blinkMessage();
            blinkWorker.execute();
        }
    }

    public SwingWorker blinkMessage() {
//        blink = true;

        return new SwingWorker() {

            Color fg = jLabel1.getForeground();
            Color bg = jLabel1.getBackground();

            @Override
            protected void process(List chunks) {
                for (Object o : chunks) {
                    boolean b = (Boolean) o;
                    if (b) {
                       // Sound.getInstance().playError();
                        jLabel1.setForeground(fg);
                    } else {
                        jLabel1.setForeground(bg);
                    }
                }
            }

            @Override
            protected Object doInBackground() throws Exception {

                boolean b = true;
                while (!isCancelled()) {
                    publish(b);
                    b = !b;
                    Thread.sleep(500);
                }
                jLabel1.setForeground(fg);
                return null;
            }

            @Override
            protected void done() {
//                Sound.getInstance().stopPlayError();
                jLabel1.setForeground(fg);
                if (logger.isInfoEnabled()) {
                    logger.info("Blink process done");
                }
            }
        };

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btReader = new javax.swing.JButton();
        btNet = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(700, 55));
        setPreferredSize(new java.awt.Dimension(700, 40));
        setLayout(new java.awt.GridBagLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(720, 38));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel1.setMaximumSize(new java.awt.Dimension(500, 45));
        jLabel1.setMinimumSize(new java.awt.Dimension(650, 40));
        jLabel1.setPreferredSize(new java.awt.Dimension(650, 40));
        jPanel1.add(jLabel1, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 500.0;
        add(jPanel1, gridBagConstraints);

        jPanel2.setMinimumSize(new java.awt.Dimension(75, 55));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btReader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/scrx.png"))); // NOI18N
        btReader.setPreferredSize(new java.awt.Dimension(30, 30));
        btReader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReaderActionPerformed(evt);
            }
        });
        jPanel2.add(btReader);

        btNet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/netx.png"))); // NOI18N
        btNet.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/images/netx.png"))); // NOI18N
        btNet.setPreferredSize(new java.awt.Dimension(30, 30));
        jPanel2.add(btNet);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(jPanel2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void btReaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReaderActionPerformed
//        try {
//            btReader.setEnabled(false);
//            CardReaderManager reader = (CardReaderManagerBean) Application.services().getService(CardReaderManager.class);
//            reader.selfTest();
//        } catch (Exception e) {
//        } finally {
//            btReader.setEnabled(true);
//        }

    }//GEN-LAST:event_btReaderActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btNet;
    private javax.swing.JButton btReader;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
